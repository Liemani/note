#lmt_c_library

#pc: 한 작업이 끝날 때마다 commit 하기
- constant.h 에서 순차적이며 추가, 삭제 등의 확장이 예상되는 데이터를 enum 으로 변경하기
- philosopher 의 simulator 를 init 하는 것처럼 어떤 값을 통해 어떤 값을 형성하는데 실패하는 것을 통틀어 뜻하는 상수를 만들자 new?, init?, init!
- README.txt -> README.md
- lmt_string_describe() 은 어떨까?
	- 왜?
- lmt_atoui()
- lmt_itoa() 등 숫자를 문자로 변환하는 함수가 문자열을 저장할 buffer 를 인자로 받도록 수정하기

#finish
- 한 라이브러리는 그 라이브러리의 root 를 추가함으로 기능이 가능해야 한다
	- 따라서 root 안의 directory 에 대한 접근을 root 에 대한 상대 경로로 수정하자
- lmt_atoi 가 INT_MIN 을 제대로 파싱하지 못하는 문제 해결
- 불필요한 주석 삭제
- t_ 삭제
- lmt_list 에 lmt_list_iterate_for_each_enumerate() 만들기
- exit() 사용하지 않도록 수정하기
	- library 에서 exit() 을 사용하는 것은 이상하다.
	- exit() 을 호출하는 최소 단위는 프로그램이다.
- lmt_string_append() 에서 바뀐 string->count 설정해주기
- lmt_string_append_string 의 두번째 인자 타입을 const 붙여주자
- 이름에 unsafe 를 붙이지 말고, 각 structure 의 property 가 optional 인지 non_optional 인지를 상단에 주석으로 설명해놓자
- 함수의 return value 에 대한 설명을 apple description? format 으로 작성하기
- lmt_unsafe_strrchr() 이 두 번째 인자로 char * 를 받는데, 왜 char 을 받지 않는거지? 안에서 호출되는 lmt_unsafe_starts() 가 두 번째 인자로 char * 를 받는 것 이외에 다른 이유가 있는가? 그렇다면 이 때는 lmt_unsafe_starts() 가 아닌 다른 함수를 사용하는 것이 맞지 않을까?
- lmt_unsafe_strdup() 의 변수 count 를 string_count 로 바꾸는게 더 readable 하지 않을까?
- 그리고 sizeof(*string_dup) 를 사용할 필요가 있을까? 어차피 string_dup 는 항상 char * 타입일텐데
- strchr() 외에 추가적으로 중간의 어딘가서부터 처음으로 진행하면서 원하는 character 를 search 하는 함수가 있으면 좋겠다.
- lmt_write() 가 다른 fd 에도 사용 가능했으면 좋겠다.
- norm v3 에 맞게 수정하기
