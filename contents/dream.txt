# 꿈과 장기 목표를 작성하는 공간

- 인공지능
  - 간단한 인공지능 (모바일, 터치가 반응의 원인이자 반응의 결과)
  - circle 돌파하기
  - 질문에 대답을 할 수 있어야 한다
  - 내 주변 환경을 인지할 수 있어야 한다
    - 다양한 방식으로 데이터를 수집할 수 있어야 한다
- 소스 코드를 분석하여 호그와트 비밀지도처럼 보여주는 프로그램
	- 실제 사람이 directory 상에 있는 소스 코드를 보면서 느끼는 크기예측감각이 적용되도록
- 게임
  - 음악 게임
    - note 치는, 시작은 드론 과정에서 만들었던 간단한 click 시스템 기반으로 해도 좋다
  - 프로그래밍이 가능해서 작업을 효율적이도록 코딩하는 것이 가능한 게임
    - 이를 위해서는 프로그램이 자체 언어와 컴파일러를 내장해야 한다
  - 한 생물계 시뮬레이터를 만들어서 플레이어가 적절히 무언가 컨트롤하여 최대한 유지하도록 노력하는 게임
  - 점프 시뮬레이션 -> 가속도를 주고 점프하면 점프 속도가 더 빨라진다
- 섬머워즈 같은 가상 세계
- interactive ppt
- 게임 운영체제
- 범용 프로그래밍 언어
  - 이 또한 circle 을 우선 돌파하기
  - 한 번 작성하면 쉽게 다른 언어로 포팅 가능한 언어
  - 단순히 언어만 개발하는 것이 아니라, 편집기 등 주변 환경도 같이 개발해야 한다
  - 1 차원을 넘어서 작성 가능했으면 좋겠다
  - 텍스트 파일이어서 쉽게 수정 가능했으면 좋겟다
  - 결코 불필요하게 가독성이 떨어지지 않았으면 좋겠다
  - 한 언어가 세팅 등에 따라 여러 언어처럼 작동했으면 좋겠다
  - 시각화가 가능했으면 좋겠다



# 미래

- 변수 명을 {key: value} 의 dictionary 로 저장하고, 화면에는 value 로 출력되게 하며 key 의 value 를 수정할 수 있는 기능을 가진 편집기 또는 환경
	- 이 때 key 를 기존 identifier name convention 에 속하도록 하고, 실제 파일에는 key 가 들어 있고, 편집기가 화면에 출력할 때는 {key: value} dictionary 를 저장하는 '.plist' 등의 파일을 읽고 key 를 value 로 치환하여 출력하도록 한다. 따라서 컴파일 시에는 '.plist' 를 읽고 치환하는 과정이 필요 없이 바로 컴파일이 가능하다.단, 그럴 경우 디버깅 시에 value 가 아닌 key 가 출력될 것이기 때문에, 디버깅을 위해 치환 후 컴파일 할 수 있도록 하는 옵션을 설정할 수 있도록 하자
- 역사를 시간축에 보기 좋게 표현하는 것은 변천사를 한 눈에 이해하는데 용이하다. 코드의 변천사도 이렇게 표현해주는 프로그램은 어떨까?
- state machine in printf, automata, regex
- git repo, branch name 을 가져오는 과정에서 git repo 안에 있지 않을 때 오류 메세지가 출력되는 문제
- 'zshrc' 를 할 때마다 precmd_vcs_info 가 precmd_functions 에 추가되는 문제
- 프로그램의 동작이 나의 예상과 다를 경우 해결 과정을 기록하자
  - 일단 무엇이 어떻게 동작할 것이라 예상했는가?
  - 실제 동작은 어떠했는가?
  - 예상 가는 원인은 무엇인가?
  - 잘못 알고 있던 부분은 무엇이었는가?
- 데이터를 git 으로 관리
- 여러 git repository 의 commit 을 확인할 수 있는 상위 git
- 면접 시 질문
  - 회의 분위기가 어떤가요?
- 42 seoul 언급 외의 공부해온 내용을 정리하여 블로그에 올리기
{
	하지만 그것을 위해서는 먼저 블로그가 잘 정돈되어야 할 것이다
	'-H' option 으로 include 하는 header file 의 위치를 파악하고 ctags 로 tags 생성 후 탐색하기
	컴퓨터 데이터의 format 을 어떻게 정의하고 통용할 수 있었는가를 간단한 bmp 파일을 직접 한땀 한땀 만드는 것으로 설명하는 영상을 만들면 좋을 것 같다
	파일 시스템 용어 정리, base name, path, real path, relative path etc
	각종 용어 정리
	키보드 문자 읽는 법
	miniRT 영어 용어 정리
	makefile
	lldb: breakpoint, watchpost, up, down, c, n, s, --name, --file --line
	vim: 여러 파일 수정하기
	git
	git log pretty format
	cli
	shell script
	free 후 참조 -> 바로 사용해도 잘못된 값이 들어갈 수 있음 (확률)
		malloc 의 크기이면 malloc 에러
	free 면 segmant fault
	참조면 abort 나 bus error
	report 내용
	automata
	프로그램 구조를 위한 추상화 과정과 프로그램 구현을 위한 구체화 과정: 뼈와 살
	philosophers 를 하면서 얻은 지식
	{
		thread
		mutex
		attribute
	}
}
- 사이드 프로젝트
  - 게임을 만들고 싶은데 (아니면 간단한 보조 프로그램이라도) 혼자 하는건 싫고 반드시 멀티가 가능하도록 만들고 싶다!!!!!!!
    - 개인 플레이 게임을 만드는 것도 크게 나쁘지는 않으나 재미를 얻을 수 있는 요소가 멀티에 비해 제한된다
- 읽고 싶은 책
  - code
  - jso 님이 추천해준 docker, kubernetes 근처에 있던, unix 탄생 스토리 책
  - Computer Organization and Design: 많은 대학에서 사용하는 컴퓨터 구조의 바이블
  - 성공과 실패를 결정하는 1%의 네트워크 원리
  - strunk and white
  - Real-World Software Developement
  - code (?)
  - cs
  - computer science
    - liveness property and safety property
  - [modern c](https://modernc.gforge.inria.fr)
  - The C Programming language
  - https://git-scm.com/book/en/v2
  - Don't Make Me Think
  - [Laws of UX](https://lawsofux.com/)
  - Code Complete
  - Writing Solid Code
- display_memory 에 2, 3, 4 번째 인자를 통해 prev, cur, end 를 표현하도록 하기
  - add, remove, move 등의 명령어를 통해 포인터 그래픽을 움직일 수 있으면 좋겠다 ㅎㅎㅎㅎ
- 층간 소음 및 담배 냄새 문제를 해결할 수 있는 데이터 검색 프로그램
	- 저장 데이터: 주소, 나이, 흡연 여부
	- 주소를 기준으로 주변(위, 아래, 왼쪽, 오른쪽) 집의 데이터를 보여준다
	- 검색은 한 달에 최대 10 번 가능하다, 추가적으로 늘리고 싶은 경우 직접 통화로 문의하여 추가 가능
		- 범죄에 오남용 예방
	- 데이터 유출을 막기 위해 데이터 출입 로그를 공개

# 쓸모 없는 짓
- 특정 문자열과 이미지를 입력받아서 해당 문자열 안에 있는 문자들만 사용하여 이미지를 ascii art 로 출력하는 프로그램
