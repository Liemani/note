# todo #########################################################################



#current
	궁금증
		exit() 을 호출하면 자식 프로세스도 종료될까?
	저번에 실행파일을 xxd 로 직접 수정해서 실행 결과를 바꾸는 작업을 해보았는데, 이 때 코드에 따라 생성되는 실행파일이 달랐었다. 코드가 어떻게 달라짐에 따라 실행파일이 어떻게 달라지는지 확인해보고, 어떨 때 실행 파일에 코드의 수정 내용이 담기고 담기지 않는지를 파악해보자. 그에따른 적절한 include 가 무엇인지 판단할 수 있게 될 것이다.
	minishell
	computer 의 programming spec 을 출력하는 프로그램
		size of int, long long... so on
	books
		The c programming language
		modern cpp
		computer system as programmer's perspective
		computer science hunter unix lecture notes
	malloc 이 NULL 을 return 할 때 어떻게 대응하는 것이 올바른 것일까?
		어떤 작업까지 더 수행하는 것이 가능한가?
		c 에서는 별다른 작업 없이 종료하거나, 문제가 무엇인지 출력하는게 일단 최선인 것 같다. 만약 어떤 작업을 하면 된다는 레퍼런스나 지침이 있다면 그렇게 하면 될 것이다. 그리고 나는 아직 그런 것을 보지 못했기 때문이다.
	main implementation
		lmt_atoui()



#investigate
	nlp
	{
		tokenization
		stemming
		lemmatization
	}
	lexic
	filedescriptors
	file table
	inode table
	program counter(pc)
	kernel panic
	구조체를 반환하면 어떻게 작동할까?
		구조체 전체를 복사하기 때문에 포인터로 하는 거에 비해 오래 걸린다는 것은 아는데, 그것이 구체적으로 어떻게 작동하는지는 모른다
	automata
		regex -> 무한 상태 머신 -> 유한 상태 머신
	아마존 무료 클라우드 호스팅 서비스 알아보기
	read vim manual



#project
	minishell
	philosophers



test program 등 유용한 shell script 를 위키처럼 관리할 수 있도록 운영하는 깃 레포를 하나 만들고 싶다

#variabledText
  cli 에서 변수 값을 인자로 넣어줄 수 있으면 좋겠다
	'variabledText <path> -v <identifier>=<value>
  '-o' 로 결과 파일을 직접 입력하는 것이 아니라 파일 내에 meta data 를 text 로 기록해두고 읽어서 사용하도록 하면 어떻까?
  변수의 값에 '\n' 를 넣을 수 있게 하려면 변수 간의 delimiter 를 '\n' 로 하면 안되는 걸까?
  변수 식별자를 일괄적으로 바꾸는 추가 기능
  다양한 경고 (위치와 해당 라인 출력)
	정의하지 않은 식별자 사용 경고
	사용하지 않은 식별자 정의 경고
	중복 정의된 식별자 경고

#blog
	블로그 모델을 만들고 모델을 github page format 으로 converting 하는 프로그램 만들기
	작업 환경을 어떻게 구성하고 사용하고 있는지에 대한 글

기록이 먼저
  프로그래밍 단어 정규화
  자동으로 웹에 백업되는 것도 좋지만, 시간이 오래 걸리는 작업이기 때문에 캐쉬를 기본으로 하고 필요에 따라 사용자에게 백업 및 풀 권한을 주는 것도 좋을 것 같다

생각
	생각을 적게 해야할 부분
		여러 이름들, 최선의 이름은 있겠지만 최고의 이름은 없다
	인자가 특정 값이면 0 을 반환하는 함수?
	env 가 setenv.sh 를 실행할 때 설정해줘야하는 파일을 vim 으로 열어도 좋을 것 같다
	va_list 인자는 기존 인자와는 다른 방식으로 작동하는 모습을 보이는 것 같다. 더 큰 크기의 인자로 받아들일 때도 입력받은 인자의 크기만큼을 가져온다. 내부적으로 어떻게 되어있는 것일까?
	기록 관리 프로그램 in cli!!!!
	git 처럼 vcs 이 아니라 기록 control system 을 만들자!
	git 에 자료를 보관하면서 보관되어 있는 자료를 쉽게 control 하는거지!
	함수 이름을 여러개로 쓸 수 있도록 필요할 때마다 추가할 수 있도록 하면 결국 지저분해질 뿐이다, 따라서 문서 편집기에서 특정 이름들을 특정 상수로 바꾸도록 처리하여 서로 다른 이름을 쓰더라도 결국 같은 상수가 되도록 처리하는 것이 좋다. 일괄적으로 변수 이름을 바꾸는 기능을 상위단에서 제공하는 것이다
	모든 local repo 의 branch 를 출력하는 프로그램은 어떨까?
	문서편집기인데 모든 문자들이 저마다의 태그를 가지고 있고 특정 태그의 특정 문자나 단어를 replace 할 수 있는 프로그램
	':set all': display all set
	데이터를 마구마구 던지면 알아서 구조화하고 정리해주는 프로그램
	일단 명령을 입력하기가 무조건 쉬워야 한다 (혹은 alias 를 사용할 수도 있겠지), 그러고 나서 보기 좋게 출력하는 것은 추가적인 출력 프로그램이 담당하는 것!
	unstable 버전을 두어서, 언제나 크리티컬한 부분이 변경 하능한 버전의 개념으로 사용하는 것은 어떨까?

테스트 환경을 잘 만들어도 좋겠다
	문자열, 숫자, 문자 등을 생성하여 인자로 넣어주는 프로그램
		(각 인자는 범위 등을 지정 할 수도 있다!)

#arrangement
  북마크
  읽기 목록
  하드
  메모
  슬랙 saved
  back command 가 인자를 받아서 해당 git repo 만 처리하도록 하자

#git
  how to get the content of hash?

#lldb
  특정 시그널 보내기
  'memory read': 메모리를 출력함
  변수 값 읽기 쓰기에 따른 breakpoint 설정

#book
	50/288 : The C Programming Language
	늑향: 10 권 114p
	최민준의 영상 제목 중 하나: 저의 20대는 이 책을 읽기 전후로 나뉩니다[최민준]
		카네기 인간 관계론
	국어를 맞춤법에 더 잘 맞게 할 수 있었으면 좋겠다
		띄어쓰기, 등

#idea
	방송으로 막 송출을 하다가 클립을 따서 위키 페이지에 정리하는 방식으로 프로젝트를 진행한다면 새로 들어오는 시청자도 클립으로 주요 부분을 이해하고 쉽게 참여가 가능하지 않을까?
	프로그램의 구조를 다 보여주는 프로그램은 어떨까?
		lldb 처럼 디버깅용 프로그램인데 어떤 함수에 어떤 변수가 존재하는지 다 보여주고 어떤 변수가 어떤 변화과정을 겪었는지 연대기를 다 보여주는거지
