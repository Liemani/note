common.txt

# 마인드 세팅
- 서로가 배우는 시간이 됐으면 좋겠습니다

# 평가 시작
- 양방 시간 확인
	- 만약 시간이 충분하면 서로 동등하게 대화하라
	- 만약 시간이 충분하지 않다면 많이 들어주도록 하라
- 자신 있는지
	- 자신 있다면 더 깊게 많이 봐주자. 내가 준비한 것도 많이 보여주자.
	- 자신이 없다면 다음엔 더 자신 있는 프로젝트를 제출할 수 있도록 도와주자.
- 끝내기 전에
	- 궁금한 것이 있는지.
	- 힘들었던 부분은 무엇이었는지.
	- 더 보여주고 싶거나 같이 얘기 나눠보고 싶은 것이 있는지.
		- "나 이런것도 했다."
		- "이런건 이렇게 생각하는데 어떻게 생각하세요?"

# 중간 선택
- 프론트 엔드 성향인지 백엔드 성향인지를 물어보고 대응한다.

#### 내가 조언해줄 수 있는 방법

영어를 할 수 있는가
프로그래밍 경력은 얼마나 되는가
프로그래밍 실력은 얼마나 되는가

이 대답들에 따라 내가 추천해줄 수 있는 방법이 달라진다
가장 바람직한 것은 영어를 어느정도 할 수 있고 실력도 어느정도 있는 경우이다
이 경우 원문을 보며 공부할 수 있어서 제대로 공부할 수 있다

그 외에 영어를 못하는 경우는 접할 수 있는 데이터의 양이 적어진다
프로그래밍 경력이 별로 안되는 경우는 원문을 읽어도 제대로 이해하기가 힘들어진다
원문을 읽기위한 기초적인 지식부터 공부해야하는 문제가 생길 수 있다

이번에 fail 해도 다시 도전하면 되죠! 화이팅입니다!!

#### 할 일

- 앞서 시간 얼마나 있는지 확인하기
- 이 과제 평가 해보신 경험
- 평가를 어떤 식으로 진행할 것인지
  - 서로 폭넓게 프로젝트에 대한 논의를 하되, 프로젝트 완성에 치명적이지 않은 부분은 점수에 고려하지 않는다
- 아이패드로 미러링하게 만들고 애플 팬슬을 써보자!
- 마구 글을 날려 쓸 공간 확보하기
  - 평가를 진행하면서 질문할 내용, 리뷰에 남길 내용, 더 알게 된 내용 등을 마구 써놓을 장소가 필요하다


#### 공통 질문

코딩 컨벤션 설명
- naming convention
  - variable, function

#### 추가적인 조언

- 디버깅 툴 사용 방법
  - 에러 발생 시 대응
  - 메모리 leak 발생 시 대응

#### 당부

혹시 평가 중에 불편했던 점 있었나요? 말씀해주시면 좋은 방향으로 노력해보겠습니다!

막히는 부분 있으면 찾아오세요! 코드 같이 봐드릴게요!
# 선행
- 리뷰는 상대에 맞춰서 진행하는 거다
	- 내가 아는걸 다 알려줘도 상대가 받아들이는 것이 중요하다.
- 상대가 얼마나 의지가 있는 상태인지를 먼저 확인하자

# depth
- 만약 자신 있으신 분이고 시간이 넉넉하다면 딮하게 봐드리자

# common
- 잘못된 입력값에 프로그램이 터지지는 않는지
	- parsing 의 edge case 점검하기
- system call 과 system library function 들을 호출할 때 에러를 처리 했는지
